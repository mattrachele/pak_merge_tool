name: Python Tests

on:
    push:
        branches:
            - '*'
    pull_request:
        branches:
            - main

jobs:
    black:
        runs-on: ubuntu-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v4

            - name: Run black
              uses: psf/black@stable
              with:
                options: "--check --verbose ."
                version: "~=24.4.0"

    pylint:
        runs-on: ubuntu-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v4

            - name: Run pylint
              run: |
                pip install -r tests/requirements.txt  # Install test dependencies
                python -m pylint --fail-under=7 --disable=C0114,C0415,R0913,R0917,C0301,R0914,R0911,R0912,R0915,W0613,W1203,C0302,R0904,C0103 .

    pytest:
        runs-on: ubuntu-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.x'

            - name: Cache pip packages
              uses: actions/cache@v3
              with:
                path: ~/.cache/pip
                key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                restore-keys: |
                  ${{ runner.os }}-pip-

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r tests/requirements.txt

            - name: Run pytest with enhanced logging
              id: pytest
              run: |
                python -m pytest tests/functional_tests.py \
                  --verbose \
                  --tb=long \
                  --showlocals \
                  --log-cli-level=DEBUG \
                  --log-cli-format="%(asctime)s | %(levelname)s | %(message)s" \
                  --log-file=pytest.log \
                  --junitxml=pytest-results.xml \
                  --capture=no 2>&1 | tee pytest-output.log

            - name: Upload pytest logs
              if: always()
              uses: actions/upload-artifact@v4
              with:
                name: pytest-logs
                path: |
                  pytest.log
                  pytest-results.xml
                  pytest-output.log

            - name: Print test summary
              if: always()
              run: |
                echo "Test Summary:"
                cat pytest-output.log | grep -E "FAILED|ERROR|PASSED|SKIPPED"

